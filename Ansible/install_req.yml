---
- hosts: kubepi
  remote_user: pi
  become: yes
  gather_facts: no
  vars:
    #docker_install_script: /tmp/installdocker.sh # Docker Convenience Script
    docker_version: "18.06.1~ce*"

  tasks:
  - name: Modify /boot/cmdline.txt
    replace:
        path: /boot/cmdline.txt
        regexp: 'rootwait'
        replace: 'rootwait cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'

  - name: Set timezone to Europe/Berlin
    timezone:
        name: Europe/Berlin

  - name: Disable swap
    shell: dphys-swapfile swapoff && dphys-swapfile uninstall && update-rc.d dphys-swapfile remove

  - name: IP tables config for Flannel
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present
      ignoreerrors: yes

  - name: Install Docker Requirements
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - software-properties-common

  - name: Add Docker apt key
    apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

  - name: Add Docker repo
    apt_repository:
        repo: deb [arch=armhf] https://download.docker.com/linux/debian stretch stable
        state: present

  - name: Apt update
    apt:
      update_cache: yes
      autoclean: yes
      autoremove: yes

  - name: Install Docker
    apt:
      name: "docker-ce={{ docker_version }}"
      state: present
      force: yes

  # Begin - Docker Convenience Scriptm, can only install latest version
  #- name: Check if Docker is already installed
  #  stat:
  #    path: /usr/bin/docker
  #  register: docker_installed
  #  ignore_errors: True

  #- name: Download Docker install script
  #  get_url:
  #      dest: "{{ docker_install_script }}"
  #      url: https://get.docker.com/
  #      mode: 0777
  #  when: docker_installed.stat.exists == False

  #- name: Install Docker
  #  shell: "{{ docker_install_script }}"
  #  when: docker_installed.stat.exists == False
  # End - Docker Convenience Script

  - name: Create group docker
    group:
        name: docker
        state: present

  - name: Add user pi to docker group
    user:
      name: pi
      groups: docker
      append: yes
      state: present

  - debug:
      msg: You must reboot before you can continue with Kubernetes.
